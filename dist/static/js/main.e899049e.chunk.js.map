{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","format","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","AuthReducer","action","message","projectReducer","rootReducer","combineReducers","authReducer","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e899049e.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log out</a></li>\n            <li><NavLink to='/' className=\"btn btn-floating red lighten-1\">{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n\n","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        //make async call to database\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS'});\n        }).catch((err) => {\n            dispatch({type: 'LOGIN_ERROR', err});\n        });\n\n    }\n};\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        //make async call to database\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'})\n        });\n    }\n};\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((response) => {\n            return firestore.collection('users').doc(response.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({type: 'SIGNUP_SUCCESS'})\n        }).catch((err) => {\n            dispatch({type: 'SIGNUP_ERROR', err})\n        })\n    }\n};\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Signup</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n};\n\nexport default SignedOutLinks;\n\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport {connect} from \"react-redux\";\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>;\n    return (\n        <nav className=\"nav-wrapper black\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">AlexPlan</Link>\n                { links }\n            </div>\n        </nav>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-o\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"green-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Notifications;\n","import React from 'react';\nimport moment from 'moment'\n\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div>\n            <div className=\"card blue-grey lighten-5 z-depth-0 project-summary\">\n                <div className=\"card-content black-text\">\n                    <span className=\"card-title\">{project.title}</span>\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                    <p className=\"black-text\">{moment(project.createdAt.toDate()).format('lll')}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProjectSummary;\n","import React from 'react';\nimport ProjectSummary from \"./ProjectSummary\";\nimport {Link} from \"react-router-dom\";\n\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return (\n                    <Link to={'/project/' + project.id} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                )\n            })}\n        </div>\n    );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\"\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport {Redirect} from \"react-router-dom\";\n\nclass Dashboard extends Component {\n    render() {\n      const { projects, auth, notifications } = this.props;\n      if (!auth.uid) return <Redirect to='/signin'/>;\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc']},\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n    ])\n)(Dashboard);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {firestoreConnect} from \"react-redux-firebase\";\nimport {compose} from \"redux\";\nimport {Redirect} from \"react-router-dom\";\nimport moment from 'moment'\n\n\nconst ProjectDetails = (props) => {\n    const {project, auth} = props;\n    if (!auth.uid) return <Redirect to='/signin'/>;\n\n    if (project) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card blue-grey lighten-5 z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action blue-grey lighten-5\">\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                        <div>{moment(project.createdAt.toDate()).format('lll')}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project ....</p>\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        project: project,\n        auth: state.firebase.auth\n\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects'}\n    ])\n)(ProjectDetails);\n","import React, {Component} from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport {Redirect} from \"react-router-dom\";\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    };\n\n    render() {\n        const {authError, auth } = this.props;\n        if (auth.uid) return <Redirect to='/'/>;\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5>Sign in</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn red lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return  {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, {Component} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {signUp} from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    };\n\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/'/>;\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5>Sign up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn red lighten-1 z-depth-0\">Sign up</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","export const createProject = (project) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        //make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({type: 'CREATE_PROJECT', project });\n        }).catch((err) => {\n            dispatch({type: 'CREATE_PROJECT_ERROR', err})\n        });\n    }\n};\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {createProject} from \"../../store/actions/projectActions\";\nimport {Redirect} from \"react-router-dom\";\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: '',\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/'); //redirect user to the main page ('/')\n    };\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin'/>;\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5>Create new project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn red lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        auth: state.firebase.auth\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Navbar />\n                <Switch>\n                    <Route exact path='/' component={Dashboard} />\n                    <Route path='/project/:id' component={ProjectDetails} />\n                    <Route path='/signin' component={SignIn} />\n                    <Route path='/signup' component={SignUp} />\n                    <Route path='/create' component={CreateProject} />\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n};\n\nconst AuthReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'Login failed'\n            };\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n                ...state,\n                authError: null\n            };\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            };\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            };\n        default:\n            return state\n    }\n};\n\nexport default AuthReducer;\n","const initState = {\n    projects: [\n        {id: '1', title: 'Awesome, Easy, Progressive CSS3 Way', content: 'We can do this purely through'},\n        {id: '2', title: 'CSS-Only Technique #1', content: 'We set a min-height which keeps it filling'},\n        {id: '3', title: 'jQuery Method', content: 'This whole idea becomes a lot easier (from a CSS perspective) i'},\n    ]\n};\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('created project error', action.err);\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default projectReducer;\n","import { combineReducers} from \"redux\";\nimport authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;\n\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\"\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAxCkmHWwNIkxWtLU2Hc-6KoQtz6TFknfQ\",\n    authDomain: \"react-projects-app-87212.firebaseapp.com\",\n    databaseURL: \"https://react-projects-app-87212.firebaseio.com\",\n    projectId: \"react-projects-app-87212\",\n    storageBucket: \"\",\n    messagingSenderId: \"90758661349\",\n    appId: \"1:90758661349:web:0cb055edd9d8528a99000c\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.firestore().settings({timestampsInSnapshots: true});\n\nexport default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport {Provider} from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {getFirebase, reactReduxFirebase} from \"react-redux-firebase\";\nimport {getFirestore, reduxFirestore} from \"redux-firestore\";\nimport fbConfig from \"./config/fbConfig\";\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n        ReactDOM.render(\n            <Provider store={store}>\n                <App/>\n            </Provider>, document.getElementById('root'));\n    }\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}